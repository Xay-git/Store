package com.sweet.modular.member.service.impl;import com.sweet.core.exception.ServiceException;import com.sweet.modular.member.entity.Member;import com.sweet.modular.member.mapper.MemberMapper;import com.sweet.modular.member.service.MemberService;import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;import org.springframework.stereotype.Service;import com.baomidou.mybatisplus.core.metadata.IPage;import com.baomidou.mybatisplus.extension.plugins.pagination.Page;import com.sweet.core.model.system.LayuiPageFactory;import com.sweet.core.model.system.LayuiPageInfo;/** * <p> * 会员表 服务实现类 * </p> * * @author admin * @since 2020-04-25 */@Servicepublic class MemberServiceImpl extends ServiceImpl<MemberMapper, Member> implements MemberService {    @Override    public LayuiPageInfo findPageBySpec(Member member) {        Page pageContext = LayuiPageFactory.defaultPage();        IPage page = this.baseMapper.customPageList(pageContext, member);        return LayuiPageFactory.createPageInfo(page);    }    @Override    public Member addMember(Member member) {        String phoneNumber = member.getPhoneNumber();        Member newMember = getMemberByPhone(phoneNumber,member.getDeptId());        if(newMember!=null){            throw new ServiceException("该手机号已经注册过~");        }        member.setMemberStatus(MEMBER_NORMARL);        save(member);        return member;    }    @Override    public Member editMember(Member member) {        Member newMember = getById(member.getId());        //用户修改了手机号        if(!member.getPhoneNumber().equals(newMember.getPhoneNumber())){            Member phoneMember = getMemberByPhone(member.getPhoneNumber(),member.getDeptId());            if(phoneMember!=null){                throw new ServiceException("改手机号已经注册过~");            }        }        updateById(member);        return member;    }    @Override    public Member getMemberByPhone(String phoneNumber,String deptId) {        return baseMapper.getMemberByPhone(phoneNumber,deptId);    }    @Override    public Integer getMemberCountByTime(String beginTime, String endTime,String deptId) {        return baseMapper.getMemberCountByTime(beginTime,endTime, deptId);    }}